@startuml
skinparam sequenceMessageAlign center
autonumber
title TO CHANGE PROFILE
legend top
US003: As Administrator, I want to change user Profile
end legend
actor Administrator
Administrator -> System: Requests users List
System --> Administrator: Returns users List
Administrator -> System: Updates Profile
System --> Administrator: Notifies the Change
@enduml

@startuml
skinparam sequenceMessageAlign center
autonumber
title TO INACTIVATE USER ACCOUNT
legend top
US005: As Administrator, I want to Inactivate a user Account
end legend
actor Administrator
Administrator -> System: Requests the list of all Users
System --> Administrator: Returns the List
Administrator -> System: Changes the status to "Inactive"
System --> Administrator: Notifies the Update
@enduml


@startuml
skinparam sequenceMessageAlign center
autonumber
title TO ACTIVATE USER ACCOUNT
legend top
US006: As Administrator, I want to Activate a user Account
end legend
actor Administrator
Administrator -> System: Requests List
System -> Administrator: Returns List
Administrator -> System: Selects user Account
Administrator -> System: Activates user Account
System --> System: Validates the Update
System --> Administrator: Notifies the Status
@enduml

2.3.1
@startuml
skinparam sequenceMessageAlign center
autonumber
title REGISTER USER ACCOUNT
legend top
US002: As Administrator, I want to Register a user Account
end legend
actor Administrator as Admin
Admin -> System: Requests new Registration
Admin -> System: Enters account Information(name,email,phone number)
System --> System: Validates Information
Admin -> System: Associates new account with an \n "user" Profile
Admin <-- System: Notifies that new account has \n been Created
@enduml

2.3.2 Reset Password
@startuml
skinparam sequenceMessageAlign center
autonumber
title RESET PASSWORD
legend top
As User, I want to reset a Password
end legend
actor Account
Account -> System: Inserts E-mail
Account -> System: Requests creation of new Password
System --> Account: Sends a Link
Account -> System: Enters new Password
System --> System: Validates new Password
Account <-- System: Notifies that password has been Updated
@enduml

@startuml
skinparam sequenceMessageAlign center
autonumber
title CREATE PASSWORD
legend top
As User, I want to create a Password
end legend
actor Account
Account -> System: Logs in for the first Time
Account <-- System: Requests password Creation
Account -> System: Enters Password
System --> System: Validates the Password
Account <-- System: Notifies the password Creation
@enduml


@startuml
skinparam sequenceMessageAlign center
autonumber
title EDIT ACCOUNT
legend top
As User, I want to edit the Account
end legend
actor Account
Account -> System: Updates user account Information
Account -> System: Requests to save Values
System --> System: Validates Information
Account <-- System: Notifies the Update
@enduml


2.4.1 Poject creation
@startuml
skinparam sequenceMessageAlign center
autonumber
title PROJECT CREATION
legend top
As Manager, I want to create a Project
end legend
actor Manager
Manager -> System: Requests new Project Creation
Manager -> System: Defines information about the Project
System --> System: Validates Project
Manager <-- System: Notifies Project Registration
@enduml

2.4.1 Project Management
@startuml
actor "Product Manager" as PM
PM -> System: Edit product Information
PM <-- System: Product information Updated
@enduml

2.4.2 Project search
@startuml
actor Account as A
A -> System: Access System
A <-- System: Access Granted
A -> System: Search Project
A <-- System: List of Projects
@enduml

2.4.3 US registration
@startuml
actor "Product Owner" as PO
PO -> System: Registers US
PO <-- System: Us Registed
PO -> System: Adds us to product Backlog
PO <-- System: US added to product Backlog
@enduml

2.4.3 Sprint backlog definition
@startuml
Team -> System: Access to product Backlog
Team <-- System: Returns product Backlog
Team -> System: Sprint backlog and effort Definition
Team <-- System: Sprint backlog Defined
@enduml

2.4.3 Product backlog grooming definition
@startuml
actor "Product Owner" as PO
PO -> System: Requests access to product Backlog
PO <-- System: Returns US
PO -> System: Replace US
PO <-- System: Product backlog Updated
@enduml

2.4.3 Sprint review
@startuml
Team -> System: Access to product Backlog
Team <-- System: Returns product Backlog
Team -> System: Sprint backlog and effort Definition
Team <-- System: Sprint backlog Defined
@enduml

2.4.3 Tasks for us
@startuml
actor "Product Owner" as PO
Team -> System: Registers finished Task
System -> System: Finished US
System -> System: Product backlog\nUpdated \n
PO -> System: Request the finished US
PO <-- System: Retrieves finished US
PO -> System: Update product backlog\nwith rejected US
@enduml

2.4.4 Task update
@startuml
actor Account
Account -> System:1 Access Information
System --> Account:2 Grants Access
Account -> System:3 Updates Information
Account -> System:4 Completes the comment Field
System --> Account:5 Generates a Record
@enduml

2.4.5  Project allocation
@startuml
actor Manager
Manager -> System:1 Access System
System --> Manager:2 Grants Access
Manager -> System:3 Checks available Resources
System --> Manager:4 Shows available Resources
Manager -> System:5 Choose resource and select Project
System --> Manager:6 System assigns resource to Project
@enduml

2.4.6 Project activity
@startuml
skinparam sequenceMessageAlign center
autonumber
title TO CHECK PROJECT ACTIVITY
actor Account
Account -> System: View project activity Status
Account -> System: Choose what type of View
System --> Account: Returns a table-shaped View
System --> Account: Returns a Gantt form View
@enduml

2.4.7
@startuml
skinparam sequenceMessageAlign center
autonumber
title TO GENERATE ALLOCATION REPORT
actor Manager
Manager -> System: Requests allocation report for any project and any member
System --> Manager: Generates Report
@enduml

@startuml
skinparam sequenceMessageAlign center
autonumber
title TO GENERATE ALLOCATION REPORT
actor "Product Owner" as PO
PO -> System: Requests allocation report of any member of the projects he/she/they is involved in
System --> PO: Generates Report
@enduml

@startuml
skinparam sequenceMessageAlign center
autonumber
title TO GENERATE ALLOCATION REPORT
actor "Scrum Master" as SM
SM -> System: Requests allocation report of any member of the projects he/she/they is involved in
System --> SM: Generates Report
@enduml

@startuml
skinparam sequenceMessageAlign center
autonumber
title TO GENERATE ALLOCATION REPORT
actor "Team Member" as TM
TM -> System: Requests allocation Report of the project he/she/they is involved
System --> TM: Generates Report
@enduml

2.4.8
@startuml
skinparam sequenceMessageAlign center
autonumber
title TO GENERATE A KPI REPORT
actor Manager
Manager -> System: Requests KPI Report any of Project
System --> Manager: Chooses XML file or on Screen
Manager -> System: Selects XML file or on Screen
System --> Manager: Reports CPI and SPI in chosen Format
@enduml

@startuml
skinparam sequenceMessageAlign center
autonumber
title TO GENERATE A KPI REPORT
actor "Project Manager" as PM
PM -> System: Requests KPI Report of Project he/she/they is involved
System --> PM: Chooses XML file or on Screen
PM -> System: Selects XML file or on Screen
System --> PM: Reports CPI and SPI in chosen Format
@enduml

@startuml
skinparam sequenceMessageAlign center
autonumber
title TO GENERATE A KPI REPORT
actor "Product Owner" as PO
PO -> System: Requests KPI Report of Project he/she/they is involved
System --> PO: Chooses XML file or on Screen
PO -> System: Selects XML file or on Screen
System --> PO: Reports CPI and SPI in chosen Format
@enduml