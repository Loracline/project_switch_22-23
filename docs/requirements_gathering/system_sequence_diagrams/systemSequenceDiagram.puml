@startuml
skinparam sequenceMessageAlign center
title TO CREATE NEW PROFILE
legend top
US001 - As Administrator, I want to create user profiles.
end legend
autonumber
actor Administrator
Administrator  -> ":System": Creates profile
note left
Account is authenticated.
":System" grants access.
end note
":System" --> Administrator: requests data (profileName)
Administrator -> ":System": Types requested data
":System" --> Administrator: informs profile created
@enduml


@startuml
skinparam sequenceMessageAlign center
title TO REGISTER NEW ACCOUNT
legend top
US002 - As Administrator, I want to register a user.
end legend
autonumber
actor Administrator
Administrator -> ":System": Registers new account
note left
Account is authenticated.
":System" grants access.
end note
Administrator <-- ":System": requests data (name, email, \n phoneNumber, photo)
Administrator  -> ":System": types requested data
":System" --> Administrator: informs account created
@enduml


@startuml
skinparam sequenceMessageAlign center
title TO CHANGE PROFILE
legend top
US003 - As Administrator, I want to change the profile of a user account.
end legend
actor Administrator
autonumber
Administrator -> ":System": Changes account profile
note left
Account is authenticated.
":System" grants access.
end note
":System" --> Administrator: requests data (email, profileName)
Administrator -> ":System": Enters account data
":System" --> Administrator: informs account profile updated
@enduml


@startuml
skinparam sequenceMessageAlign center
title TO LIST ALL ACCOUNTS
legend top
US004 - As Administrator, I want to get a list of all user accounts and their status.
end legend
actor Administrator
autonumber
Administrator -> ":System": Lists all accounts
note left
Account is authenticated.
":System" grants access.
end note
":System" --> Administrator: returns accounts
@enduml


@startuml
legend top
US005 - As Administrator, I want to inactivate a user account.
end legend
skinparam sequenceMessageAlign center
title TO INACTIVATE USER ACCOUNT
actor Administrator
autonumber
Administrator -> ":System": Changes account status to "Inactive"
note left
Account is authenticated.
":System" grants access.
end note
Administrator <-- ":System": requests data (email, status)
Administrator -> ":System": Enters requested data
":System" --> Administrator: informs account status updated
@enduml


@startuml
legend top
US006 - As Administrator, I want to activate a user account.
end legend
skinparam sequenceMessageAlign center
title TO ACTIVATE USER ACCOUNT
actor Administrator
autonumber
Administrator -> ":System": Changes account status to "Active"
note left
Account is authenticated.
":System" grants access.
end note
":System" --> Administrator: requests data (email, status)
Administrator -> ":System": Enters requested data
":System" --> Administrator: informs account status updated
@enduml


@startuml
legend top
US007 - As Administrator, I want to create a new Project Typology.
end legend
skinparam sequenceMessageAlign center
title TO CREATE NEW PROJECT TYPOLOGY
actor Administrator
autonumber
Administrator -> "System": starts creating new project typology
note left
Account is authenticated.
"System" grants access.
end note
System -> "Administrator": requests data (projectTypology)
Administrator -> "System": types requested data
Administrator <-- "System":project typology created
@enduml


@startuml
legend top
US008 - As Administrator, I want to add a bussiness sector.
end legend
skinparam sequenceMessageAlign center
title TO CREATE A NEW BUSINESS SECTOR
actor "Administrator"
autonumber
Administrator -> ":System": starts adding new business sector
note left
Account is authenticated.
":System" grants access.
end note
Administrator <-- ":System": requests data (name)
Administrator -> ":System": types requested data
Administrator <-- ":System":informs operation success
@enduml


@startuml
legend top
US009 - As Administrator, I want to add a customer.
end legend
skinparam sequenceMessageAlign center
title TO ADD A CUSTOMER
actor "Administrator"
autonumber
Administrator -> ":System": starts adding new customer
note left
Account is authenticated.
":System" grants access.
end note
Administrator <-- ":System": requests data (customerName)
Administrator-> ":System": sends requested data
Administrator <-- ":System":informs operation success
@enduml


@startuml
legend top
US010 - As Manager, I want to register/create a new project.
end legend
skinparam sequenceMessageAlign center
title TO REGISTER NEW PROJECT
autonumber
actor "Manager"
"Manager" -> ":System": registers new project
note left
Account is authenticated.
":System" grants access.
end note
"Manager" <-- ":System": requests data (code, name, ...)
"Manager" -> ":System":  types requested data
"Manager" <-- ":System": informs project created
@enduml


@startuml
/'
autonumber
skinparam sequenceMessageAlign center
title TO DEFINE SCRUM MASTER OF PROJECT
legend top
US0013 - As Manager, I want to define the SM of a project.
end legend
actor "Manager"
"Manager" -> ":System": Starts the definition \nof SM of a project
note left
Account is authenticated.
":System" grants access.
end note
"Manager" <-- ":System": returns list of possible projects / accounts
"Manager" -> ":System": Selects project / account
"Manager" <-- ":System": informs success
'/
@enduml


@startuml
legend top
US011 - As Manager, I want to associate a user as Team Member of a project.
US012 - As Manager, I want to define the PO of a project.
US013 - As Manager, I want to define the SM of a project.
end legend
skinparam sequenceMessageAlign center
title TO ASSOCIATE USER AS TEAM MEMBER/PRODUCT OWNER/SCRUM MASTER TO A PROJECT
actor "Manager"
autonumber
"Manager" -> ":System": requests list of all User accounts
note left
Account is authenticated.
":System" grants access.
end note
"Manager" <-- ":System": requests to select User account
"Manager" -> ":System": selects User account
"Manager" -> ":System": requests list of all projects
"Manager" <-- ":System": requests to select project
"Manager" -> ":System": selects project
"Manager" -> ":System": starts the association of the selected User with the selected project and a role
"Manager" <-- ":System": requests data
"Manager" -> ":System": sends data (role, costPerHour, percentageAllocation, startDate)
"Manager" <-- ":System": informs team member/product owner/scrum master associated/defined
@enduml

@startuml
legend top
US014 - As Manager, I want to get a list of all human resources in a project.
end legend
skinparam sequenceMessageAlign center
title TO GET A LIST OF ALL HUMAN RESOURCES IN PROJECT
actor "Manager"
autonumber
"Manager" -> ":System": registers new project
note left
Account is authenticated.
":System" grants access.
end note
"Manager" <-- ":System": requests data (code, name, ...)
"Manager" -> ":System":  types requested data
"Manager" <-- ":System": informs project created
@enduml

@startuml
legend top
US015 - As Manager, I want to get a list of all projects.
end legend
skinparam sequenceMessageAlign center
title TO GET A LIST OF ALL PROJECTS
actor "Manager"
autonumber
"Manager" -> ":System": get list of all projects
note left
Account is authenticated.
":System" grants access.
end note
"Manager" <-- ":System": returns list of all projects DTO
"Manager" <-- ":System": show list of all projects
@enduml


@startuml
legend top
US016 - As Authenticated User, I want to get a list of all projects I'm currently allocated to.
end legend
skinparam sequenceMessageAlign center
title TO GET A LIST OF ALL PROJECTS
actor "Authenticated User"
autonumber
"Authenticated User" -> ":System": lists all projects the user is allocated to
note left
Account is authenticated.
":System" grants access.
end note
"Authenticated User" <-- ":System": returns projects DTO

@enduml

@startuml
skinparam sequenceMessageAlign center
title TO SEARCH ACCOUNT BY E-MAIL
actor Administrator
autonumber
Administrator -> ":System": Searches account by e-mail
note left
Account is authenticated.
":System" grants access.
end note
":System" --> Administrator: returns account matching
@enduml


@startuml
skinparam sequenceMessageAlign center
title TO SEARCH ACCOUNT BY PROFILE
actor Administrator
autonumber
Administrator -> ":System": Searches account by profile
note left
Account is authenticated.
":System" grants access.
end note
":System" --> Administrator: returns list of accounts
@enduml


@startuml
skinparam sequenceMessageAlign center
title TO MANAGE PROJECT
actor "Project Manager" as PM
autonumber
PM -> ":System": Edits project info
note left
Account is authenticated.
":System" grants access.
end note
PM <-- ":System": project info updated
@enduml


@startuml
skinparam sequenceMessageAlign center
title TO SEARCH PROJECT BY MANAGER
actor "Manager"
autonumber
"Manager" -> ":System": Searches project by (code, name, etc.)
note left
Account is authenticated.
":System" grants access.
end note
"Manager" <-- ":System": lists all projects matching
@enduml


@startuml
skinparam sequenceMessageAlign center
title TO SEARCH PROJECT BY USER
actor "User in Project" as UIP
autonumber
UIP -> ":System": Searches project by (code, name, etc.)
note left
Account is authenticated.
":System" grants access.
end note
UIP <-- ":System": lists projects User is / was enrolled
@enduml


@startuml
skinparam sequenceMessageAlign center
title TO CREATE USER STORY (US)
actor "Product Owner" as PO
autonumber
PO -> ":System": Creates new US
note left
Account is authenticated.
":System" grants access.
end note
PO <-- ":System": requests data (US_number, actor, US_text, etc.)
PO -> ":System": Enters US data
PO <-- ":System": US created and added to product backlog
@enduml


@startuml
skinparam sequenceMessageAlign center
title TO CREATE SPRINT
actor "User in Project" as UIP
autonumber
UIP -> ":System": Requests product backlog data
note left
Account is authenticated.
":System" grants access.
end note
UIP <-- ":System": returns US
UIP -> ":System": Defines US for sprint
UIP <-- ":System": new sprint created
@enduml


@startuml
skinparam sequenceMessageAlign center
title TO GROOM USER STORY
actor "Product Owner" as PO
PO -> ":System": Requests product backlog data
note left
Account is authenticated.
":System" grants access.
end note
PO <-- ":System": returns US
PO -> ":System": Decomposes US
PO <-- ":System": US replaced
@enduml


@startuml
skinparam sequenceMessageAlign center
title TO REVIEW SPRINT
actor "Product Owner" as PO
PO -> ":System": Accesses all sprint's US
note left
Account is authenticated.
":System" grants access.
end note
PO <-- ":System": returns US
PO -> ":System": Returns not finished US to product backlog
PO <-- ":System": US remains in product backlog
@enduml


@startuml
skinparam sequenceMessageAlign center
title TO CREATE TASK FOR USER STORY
actor "User in Project" as UIP
UIP -> ":System": Creates task related to US
note left
Account is authenticated.
":System" grants access.
end note
UIP <-- ":System": requests task data
UIP -> ":System": Enters task data
UIP <-- ":System": new task created
@enduml


@startuml
skinparam sequenceMessageAlign center
title TO UPDATE TASK IN USER STORY
actor "User in Project" as UIP
UIP -> ":System": Updates info about task
note left
Account is authenticated.
":System" grants access.
end note
UIP <-- ":System": requests update description
UIP -> ":System": Enters data
UIP <-- ":System": task updated
@enduml


@startuml
skinparam sequenceMessageAlign center
title TO FINISH TASK IN USER STORY
actor "User in Project" as UIP
UIP -> ":System": Registers task finished during sprint
note left
Account is authenticated.
":System" grants access.
end note
UIP <-- ":System": returns unfinished US to product backlog
@enduml


@startuml
skinparam sequenceMessageAlign center
title TO ALLOCATE RESOURCE IN PROJECT
actor "Manager"
"Manager" -> ":System": Assigns resource to project
note left
Account is authenticated.
":System" grants access.
end note
"Manager" <-- ":System": requests data (startingDate, endingDate,\n costPerHour, percentAllocation)
"Manager" -> ":System": Enters data
"Manager" <-- ":System": resource added to project
@enduml


@startuml
skinparam sequenceMessageAlign center
title TO GENERATE ALLOCATION REPORT BY MANAGER
actor "Manager"
"Manager" -> ":System": Requests allocation report of \n any member of any project
note left
Account is authenticated.
":System" grants access.
end note
"Manager" <-- ":System": generates allocation report
@enduml


@startuml
skinparam sequenceMessageAlign center
title TO GENERATE ALLOCATION REPORT BY \n PROJECT MANAGER, PRODUCT OWNER OR SCRUM MASTER
actor "PM, PO or SM" as PPS
PPS -> ":System": Requests allocation report of any member \n of projects he / she / they are involved in
note left
Account is authenticated.
":System" grants access.
end note
PPS <-- ":System": generates allocation report
@enduml


@startuml
skinparam sequenceMessageAlign center
title TO GENERATE ALLOCATION REPORT BY TEAM MEMBER
actor "Team Member" as TM
TM -> ":System": Requests personal allocation report \n of projects he / she / they are involved in
note left
Account is authenticated.
":System" grants access.
end note
TM <-- ":System": generates allocation report
@enduml


@startuml
skinparam sequenceMessageAlign center
title TO GENERATE KPI REPORT BY MANAGER
actor "Manager"
"Manager" -> ":System": Requests KPI report of any project
note left
Account is authenticated.
":System" grants access.
end note
"Manager" <-- ":System": reports CPI and SPO in chosen format
@enduml


@startuml
skinparam sequenceMessageAlign center
title TO GENERATE KPI REPORT BY PROJECT MANAGER OR PRODUCT OWNER
actor "PM or PO" as PP
PP -> ":System": Requests KPI report of project \n he/she/they are involved in
note left
Account is authenticated.
":System" grants access.
end note
PP <-- ":System": reports CPI and SPO in chosen format
@enduml


@startuml
skinparam sequenceMessageAlign center
title TO KEEP RECORD OF SCRUM CEREMONY
actor "User in Project" as UIP
UIP -> ":System": Begins ceremony
note left
Account is authenticated.
":System" grants access.
end note
UIP <-- ":System": starts recording
UIP -> ":System": Finishes ceremony
UIP <-- ":System": stops recording / keeps record
@enduml

@startuml
skinparam sequenceMessageAlign center
title TO SEARCH All PROJECTS BY MANAGER
actor "Manager"
autonumber
"Manager" -> ":System": List all projects
note left
Account is authenticated.
":System" grants access.
end note
"Manager" <-- ":System": ShowListAllProjects
@enduml


@startuml
/'
skinparam sequenceMessageAlign center
title TO ADD A CUSTOMER
actor "Administrator" as adm
adm -> ":System": starts adding new customer
note left
Account is authenticated.
":System" grants access.
end note
adm <-- ":System": requests data (customerName)
adm -> ":System": types requested data
adm <-- ":System":informs operation success
'/
@enduml


@startuml
skinparam sequenceMessageAlign center
title AS A MANAGER, TO LIST ALL HUMAN RESOURCES IN A PROJECT
actor "Manager"
"Manager" -> ":System": lists all accounts of a given project
note left
Account is authenticated.
":System" grants access.
end note
"Manager" <-- ":System": returns list of accounts
@enduml

@startuml
skinparam sequenceMessageAlign center
title TO LIST ALL PROJECTS THE USER IS ALLOCATED AS AUTHENTICATED
actor "User"
"User" -> ":System": lists all projects the user is allocated to
note left
Account is authenticated.
":System" grants access.
end note
"User" <-- ":System": shows list of all projects the user is allocated
@enduml

@startuml
/'
skinparam sequenceMessageAlign center
title TO CREATE A NEW BUSINESS SECTOR
actor "Administrator" as adm
adm -> ":System": starts adding new business sector
adm <-- ":System": requests data (name)
adm -> ":System": types requested data
adm <-- ":System":informs operation success
'/
@enduml