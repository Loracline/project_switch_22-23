pipeline {
    agent any


    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out...'
                git branch: 'master', url: 'https://bitbucket.org/joaoserra1993/project_g4_open_doors'
            }
        }
        stage('Assemble') {
            agent {
                docker {
                    image 'maven:3.9.0-eclipse-temurin-11'
                    args '-v /root/.m2:/root/.m2'
                }
            }
            steps {
                echo 'Assembling...'
                sh 'mvn clean package'
            }
        }
        stage('Integration Test') {
            agent {
                docker {
                    image 'maven:3.9.0-eclipse-temurin-11'
                    args '-v /root/.m2:/root/.m2'
                }
            }
            steps {
                echo 'Running integration tests...'
                sh 'mvn failsafe:integration-test'
            }
        }
        stage('Unit Test') {
            agent {
                docker {
                    image 'maven:3.9.0-eclipse-temurin-11'
                    args '-v /root/.m2:/root/.m2'
                }
            }
            steps {
                echo 'Running unit tests...'
                sh 'mvn test jacoco:report'
            }
        }
        stage('Publish Test Results and Coverage') {
            steps {
                echo 'Publishing test results and coverage...'
                junit '**/target/surefire-reports/*.xml'
                publishHTML(target: [
                    allowMissing: false,
                    alwaysLinkToLastBuild: false,
                    keepAll: true,
                    reportDir: 'target/site/jacoco',
                    reportFiles: 'index.html',
                    reportName: 'Code Coverage'
                ])
            }
        }
        stage('Publish Integration Test') {
            steps {
                echo 'Publishing test results and coverage...'
                junit '**/target/failsafe-reports/*.xml'
                publishHTML(target: [
                    allowMissing: false,
                    alwaysLinkToLastBuild: false,
                    keepAll: true,
                    reportDir: 'target/site',
                    reportFiles: 'index.html',
                    reportName: 'Integration Test'
                ])
            }
        }
        stage('Generate Javadoc') {
            agent {
                docker {
                    image 'maven:3.9.0-eclipse-temurin-11'
                    args '-v /root/.m2:/root/.m2'
                }
            }
            steps {
                echo 'Generating Javadoc...'
                sh 'mvn javadoc:javadoc'
            }
        }
        stage('Publish Javadoc') {
            steps {
                echo 'Publishing Javadoc...'
                publishHTML(target: [
                    allowMissing: false,
                    alwaysLinkToLastBuild: false,
                    keepAll: true,
                    reportDir: 'target/site/apidocs',
                    reportFiles: 'index.html',
                    reportName: 'Javadoc'
                ])
            }
        }
        stage('Archive') {
            steps {
                echo 'Archiving...'
                archiveArtifacts 'target/*.war'
            }
        }
        stage('Publish Image') {
            steps {
            echo 'Building and publishing Docker image...'
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'DockerHubPersonal') {
                        def frontendImage =  docker.build("marianazancheta/g4:frontend${env.BUILD_ID}","-f ./Dockerfile-frontend ." )
                        def backendImage  =  docker.build("marianazancheta/g4:backend${env.BUILD_ID}","-f ./Dockerfile-backend ." )
                        frontendImage.push()
                        backendImage.push()
                    }
                }
            }
        }
    }
}
