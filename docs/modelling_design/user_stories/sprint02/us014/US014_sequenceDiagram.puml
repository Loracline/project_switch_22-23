@startuml
skinparam sequenceMessageAlign center
title TO LIST ALL ACCOUNTS IN A GIVEN PROJECT
legend top
US014 - As Manager, I want to get a list of all human resources in a project.
end legend
autonumber

actor Manager
participant ":ListAccountsInProjectUI" as ui
participant ":ListAccountsInProjectController" as controller
participant ":Company" as company
participant ":AccountContainer" as ac
participant "account:Account" as a
participant ":ProjectContainer" as container
participant ":AccountInProjectContainer" as aipc
participant "accountInProject:AccountInProject" as aip
participant "accounts: List<Account>" as list
participant "accountMapper:AccountMapper" as mapper
participant "accountsDTO: List<AccountDTO>" as listDTO
participant "accountDTO:AccountDTO" as DTO
participant "profile:Profile" as pf
participant "project:Project"


activate Manager
Manager -> ui: lists all accounts of a given project
activate ui
ui -> controller: listAccountsByProject(email, projectCode)
activate controller
controller -> company: validateManager(email)
activate company
company -> ac: validateManager(email)
activate ac
ac -> a: isManager()
activate a
a -> pf : getProfileByName()
activate pf
a -->> ac: true
deactivate pf
deactivate a
ac -->> company: true
deactivate ac
company -->> controller: true
deactivate company
controller -> company: listAccountsByProject(projectCode)
activate company
company -> container: listAccountsByProject(projectCode)
activate container
container -> container: project = getProjectByCode(projectCode)
container -> aipc: listAccountsByProject(project)
activate aipc
create list
aipc --> list :create()
loop for each AccountInProject in AccountInProjectContainer
aipc -> aip : getAccountByProject(project)
activate aip
aip --> aipc : account
deactivate aip
aipc -> list : add(account)
activate list
deactivate list
end loop
aipc --> container : accounts
deactivate aipc
container--> company : accounts
deactivate container
company --> controller: accounts
deactivate company
create mapper
controller -> mapper: create( )
create listDTO

activate mapper
mapper --> listDTO: create ()
loop for each account in accounts
mapper -> list: account = get(i)
list --> mapper: account
activate mapper
mapper -> mapper : accountDTO = accountToDTO(account)
create DTO
mapper --> DTO : create()
mapper ->listDTO :add(accountDTO)
deactivate mapper
activate listDTO
end loop
deactivate listDTO
mapper --> controller :accountsDTO
deactivate mapper
controller -->> ui: accountsDTO
deactivate controller
ui --> Manager: return list of accounts
deactivate ui
@enduml